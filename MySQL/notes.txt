------------------------------------------------------------------------------------------

                        Notas do Curso de MySQL - Curso em Video

------------------------------------------------------------------------------------------

Aula 01 - O que é um Banco de Dados

Fichas -> Pastas -> Arquivos (Antigamente)

Arquivos -> Tabelas -> Registros

Arquivos de Acesso sequendial - Ex: Filmes
Arquivos de Acesso Direto - Ex: HD


Estrutura do Bando de Dados:

- Base de Dados
- Sistema Gerenciador
- Linguagem de exploração
- Programas Adicionais


Modelo Relacionau

SQL - Structured Query Language (Linguagem de Consulta Estruturada)

Existem Varia Linguegem de Estrutura sequencial que usam seus proprios servidores. 
Todas regulamentas por orgãos reguladores e padronizadores. Ex Oracle, IBM, MicrosoftSQL e MySQL


------------------------------------------------------------------------------------------

Aula 02 - Instalando o MySQL

MySQL

DDL - Comandos de definição;
DML - Manipulação de dados;
DQL - Solicitações;
DCL - COntrole;
DTL - Transações.

Como Instalar o MySQL:

Siga os passos indicados pelo site abaixo:
https://marketplace.visualstudio.com/items?itemName=Oracle.mysql-shell-for-vs-code


------------------------------------------------------------------------------------------

Aula 03 - Criando o Primeiro Bando de dados

Comandos Basicos:

CREATE DATABASE nomex; *cria uma nova base de dados
CREATE TABLE nomex (); * cria uma nova tabela
use nomex; 
describe nomex; *mostra o conteudo
drop DATABASE nomex; *remove uma base de dados
select * from nomex;

Tipos Primitivos:
 - numeros
    - Inteiro (TinyInt, SmallInt, Int, MediumInt, BigInt)
    - Rel (Decimal, Float, Double, Real)
    - Logico (Bit, Boolean)

- Data/Tempo (Date, DateTime, TimeStamp, Time, Year)

- Literal
    - Caractere (Char, Varchar)
    - Texto (TinyText, Text, MediumText, LongText)
    - Binario (TinyBlob, Blob, MedimBlob, LongBlob)
    - Coleção (Enum, Set)

- Espacial (Geometry, Point, Polygon, MultPolygon)

------------------------------------------------------------------------------------------

Aula 04 - Melhorando a Estrutura do Banco de Dados

Parametros

Constraints: 
default character set utf8 *Permitir o uso de Caracteres especiais

    {
        default collate utf8_general_ci;
    }

ex final da aula:

    {
        use cadastro;

        create table pessoas (
            id int not null auto_increment,
            nome varchar(30) not null,
            nascimento date,
            sexo enum ('M', 'F'),
            peso decimal (5,2),
            altura decimal(3,2),
            nacionalidade varchar(20) default 'Brazil',
            primary key(id)
        )default charset = utf8;
    }

------------------------------------------------------------------------------------------

Aula 05 - Inserindo Dados na Tabela (insert into)

comando Formato:

    {
        use pessoas; 

        insert into pessoas
        (id, nome, nascimento, sexo, peso, altura, nacionalidade)
        values
        (default, 'Godofredo', '1987-01-02', 'M', '78.51', '1.83', 'Brasil');
    }

se colocar em ordem os valores pode-se colocar os valores diretamente como abaixo:

    {
        insert into pessoas values
        (default, 'Esther', '1997-05-12', 'F', '69.51', '1.67', 'Irlanda');
    }

para se colocar multiplos valores:

    {
        insert into pessoas values
        (default, 'Lizandra', '1998-07-12', 'F', '62.51', '1.57', 'Brasil'),
        (default, 'Duda', '1998-07-12', 'F', '62.51', '1.57', 'Irlanda'),
        (default, 'Daniele', '1998-07-12', 'F', '62.51', '1.57', 'Irlanda'),
        (default, 'Heloisa', '1998-07-12', 'F', '62.51', '1.57', 'Portugal');
    }

------------------------------------------------------------------------------------------

Aula 06 - Alterando a Estrutura da Tabela (ALter Table e Drop Table)

estrutura Basica 'Alter Table':

    {
        use cadastro;

        alter table pessoas
        add column profissao varchar(15);
    }

remover coluna:

    {
        alter table pessoas
        drop column profissao;
    }

adicionar coluna e definir posição da coluna na tabela:

    {
        alter table pessoas
        add column profissao varchar(10) after nome;
    }

se quiser colocar a coluna por primeiro:

    {
        alter table pessoas
        add column profissao varchar(10) after first;
    }

para mudar algo na coluna:

    {
        alter table pessoas
        modify column profissao varchar(20);
    }

para mudar o nome da coluna:

    {
        alter table pessoas
        change profissao prof varchar(20) not null default 'Desempregado';
    }

mudar nome da tabela:

    {
        alter table pessoas
        rename to clientes;
    }

criar uma nova tabela:

    {
        create table if not exists cursos (
            nome varchar(30) not null unique,
            descricao text,
            carga int unsigned,
            ano year default '2016'
        ) default charset = utf8mb4;

        alter table cursos
        add column id int first;

        alter table cursos
        add primary key (id);
    }

se quiser apagar uma tabela:

    {
        create table if not exists provisorio;

        create table if not exists provisorio (
        id int,
        nome varchar(30),
        idade int
        );

        insert into provisorio values
        ('1', 'Oscar', '37'),
        ('2', 'Amanda', '27'),
        ('3', 'Ana', '31');

        drop table if exist provisorio;
    }


------------------------------------------------------------------------------------------

Aula 07 - Manipulando Linhas/Registros (Update, Delete e Truncate)

Para fazer uma mudança em uma linha/registro:

    {
        use cadastro;

        insert into cursos values
        ('1', 'Engenharia', 'Exatas', '600', '200', '2020'),
        ('2', 'Administracao', 'Humanas', '400', '150', '2021'),
        ('3', 'Letras', 'Humanas', '400', '150', '2022'),
        ('4', 'Pefagogia', 'Humanas', '400', '150', '2023'),
        ('5', 'Marketing', 'Humanas', '400', '150', '2020'),
        ('6', 'Publicidade', 'Humanas', '400', '150', '2021'),
        ('7', 'Terapias', 'Profissionalizante', '100', '25', '2022'),
        ('8', 'Culinaria', 'Profissionalizante', '200', '50', '2023'),
        ('9', 'Enfermagem', 'Saude', '600', '200', '2020'),
        ('10', 'Nutricao', 'Saude', '400', '175', '2021');

        update cursos
        set ano = '2022' 
        where id = '6';
    }

se quiser alterar mais de uma informação na mesma linha/registro:

    {
        update cursos
        set totalaulas = '75', ano = '2020'
        where id = '6';
    }

se quiser garantir que só uma linha/registro seja modificada:

    {
        update cursos
        set totalaulas = '75', ano = '2020'
        where id = '6'
        limit 1;
    }

para mudar varias/todas linhas ao mesmo dado: 
OBS: Cuidado Para Não causar danos irreversiveis em seu banco de dados!

    {
        update cursos
        set ano = 2020
        where ano = 2023;
    }

para apagar uma linha/registro:

    {
        delete from cursos
        where id = '10';
    }

para apagar mais de uma linha/registro usando algum dado igual:

    {
        delete from cursos
        where descricao = 'Artes'
        limit 2;
    }

para apagar todas as linhas/registros:
    OBS: Cuidado para nao causar uma tragedia no banco de dados, mantenha sempre um back-up!

    {
        truncate table cursos;
    }

    repare que fora escluidos todos as linhas/registros da tabela, mas a estrutura da tabela foi mantida.

------------------------------------------------------------------------------------------

Aula 08 - Gerenciando copias de Segurança MySQL

Para Criar sua copia de seguranã no WorkBanck do MySQL siga os passos abaixo:

server -> data export -> selecione 'nomedobanco' -> certifique que todas as tabelas estao selecionadas

-> em 'dumb ....' selecione a opção desejada -> selecione demais opções de acordo com a necessidade

vamos deletar o banco de dados para recupera-lo depois:

{
    drop database cadastro;
}

agora necessita-se importar novamente a copia de Segurança:

server -> data import -> navegue ateh o arquivo da copia -> digite o nome da database no campo 'default target schemas'

------------------------------------------------------------------------------------------

Aula 09 - PHPmyAdmin
vc pode usar os mesmo comando aprendidos anteriormenta para manipular o banco de daos através do console(prompt de comandos)

outr boa opção é usar

para viasuliazar os comando utilizado para criar uma table:

    {
        show create table nomex;
    }

da mesma maneira para visualizar os comandos utilizados para criar uma Base de dados:

    {
        show creat database nomex;
    }

------------------------------------------------------------------------------------------

Exercios

- Faça o Dowloand no site.

------------------------------------------------------------------------------------------

Aula 11 - SELECT (parte 1)

se quiser ordenar a tabela conforme algum parametro especifico:

    {
        use cadastro;

        select * from gafanhotos;

        select * from gafanhotos
        order by nome;
    }

se quiser fazer em ordem descrescente:

    {
        select * from gafanhotos
        order by nome desc;
    } 

para selecionar colunas especificas:

    {
        select nome, sexo, altura from gafanhotos
        order by nome;
    }

nesse caso voce alterar a ordem das colunas:

    {
        select sexo, altura, nome from gafanhotos
        order by sexo, altura;
    }

para filtrar linhas especificas:

    {
        select * from cursos
        where ano = '2016'
        order by idcurso;
    }

voce pode usar mais comando comparativos ( >, <, =, <=, >=, !=, etc...)para filtrar:

    {
        select nome, carga, totaulas, ano from cursos
        Where carga >= 30
        order by carga, totaulas;
    }

para definir um filtro com intervalo definido:

    {
        select nome, carga, totaulas, ano from cursos
        where ano between 2014 and 2016
        order by ano, carga, totaulas;
    }

para filtrar usando valores especificos:

    {
        select nome, carga, totaulas, ano from cursos
        where ano in (2015, 2017)
        Order by ano, nome;
    }

pode ainda definir um filtre logico (and, or, etc...) pode usar mais de um filtro:

    {
        select nome, carga, totaulas from cursos
        where carga > 35 and totaulas < 30
        order by ano, nome;
    }

    {
        select nome, carga, totaulas from cursos
        where carga > 35 or totaulas < 30
        order by ano, nome;
    }

------------------------------------------------------------------------------------------

Aula 11 - SELECT (parte 2)

Para Filtrar registros semelhantes:

    {
        select * from cursos
        where nome like 'P%'
        order by idcurso;
    }

    OBS: o caractere '%' tem significa: nenhum ou varios valores

    a posição do caractere '%' faz toda diferença:

    {
        select * from cursos
        where nome like '%A'
        order by idcurso;
    }

    {
        select * from cursos
        where nome like '%A%'
        order by idcurso;
    }

se quiser sem nada dessa semelhança:

    {
        select * from cursos
        where nome not like '%A%'
        order by idcurso;
    }

caso queira que tenha um caractere no começo e no final:

    {
        select * from cursos
        where nome like 'ph%p_'
        order by idcurso;
    }

    OBS: o caractere '_' obriga que tenha pelo menos um algorismo, e sua posição faz toda diferença.


caso queira fazer um filtro que distingua a variedade:

    {
        select distinct nacionalidade from gafanhotos
        order by nacionalidade;
    }

para fazer uma contagem:

    {
        select count(distinct nacionalidade) from gafanhotos;
    }

para saber qual é o maior ou o menor:
obs: Nesse caso ele soh vai mostrar o primeiro, para mostrar todos precisa usar agrupamento.

    {
        select max(carga) from cursos;
    }

    {
        select min(carga) from cursos;
    }

para fazer um somatorio do total dos valores da tabela:

    {
        select sum(carga) from cursos
        where ano = '2016';
    }

para tirar a media dos valores de uma tabela:

    {
        select avg(carga) from cursos
        where ano = '2016';
    }

------------------------------------------------------------------------------------------

Exercios:

1 - Seleciona uma Lista com o nome de todas as gafanhotas.

    resposta:
    {
        select nome, sexo from gafanhotos
        where sexo = 'F'
        Order by nome;
    }

2 - Uma Lista com os dados de todos aqueles que nasceram entre 1/jan/2000 e 31/12/2015.
    
    resposta:
    {
        select nome, nascimento from gafanhotos
        where nascimento >= '2000-01-01' and nascimento <= '2015-12-31'
        order by nascimento;
    }

3 - Uma Lista com o nome de todos os homem que trabalham como programadores.

    resposta:
    {
        select nome, profissao from gafanhotos
        where profissao = 'programador'
        order by nome;
    }

4 - Uma lista com os dados de todas as mulheres que nasceram no Brasil e que tem seu nome iniciado com a letra J.

    resposta:
    {
        select nome, nacionalidade from gafanhotos
        where nacionalidade = 'Brasil' and nome like 'J%'
        order by nome;
    }

5 - Uma lista com o nome e nacionalidade de todos os homens que tem silva no nome, nao nasceram no Brasil e pesam menos de 100kg.

    resposta:
    {
        select nome, nacionalidade, peso from gafanhotos
        where nacionalidade != 'Brasil' and nome like '%Silva%' and peso < '100'
        order by peso;
    }

6 - Qual é a maior altura entre gafanhotos homens que moram no Brasil?

    resposta:
    {
        select max(altura) from gafanhotos
        where nacionalidade = 'Brasil' and sexo = 'M';
    }

7 - Qual é a media de peso dos gafanhotos cadastrados?

    resposta:
    {
        select avg(peso) from gafanhotos;
    }

8 - Qual é o menor peso entre as mulheres que nasceram fora do Brasil entre 01/jan/1990 e 31/12/2000?

    resposta:
    {
        select min(peso) from gafanhotos
        where sexo = 'F' and nacionalidade != 'Brasil' and nascimento between '1990-01-01' and '2000-12-31';
    }

9 - Quantas mulheres tem mais de 1.90m de altura?

    {
        select count(altura) from gafanhotos
        where sexo = 'F' and altura >= '1.90' 
        order by altura;    
    }

------------------------------------------------------------------------------------------

Aula 13 - SELECT (Parte 3)

para agrupar por registros iguais:
    OBS: Usando apenas assim vc não consegue visualizar quanto tem em cada grupo!

    {
        select carga from cursos
        group by carga
        order by carga;
    }

Para no agrupamento saber quantos registros de cada grupo:

    {
        select carga, count(*)from cursos
        group by carga
        order by carga;
    }

    {
        select carga, count(nome)from cursos
        where totaulas = 30
        group by carga
        order by carga;
    }

para selecionar o que agrupar:

    {
        select ano, count(*) from cursos
        group by ano
        having count(ano) >= 5
        order by count(*) desc;
    }

pode usar um select dentro de outro select:

    {
        select carga, count(*) from cursos
        where ano > 2015
        group by carga
        having carga > (select avg(carga) from cursos);
    }

------------------------------------------------------------------------------------------

Exercios:

1 - Uma Lista com a profissao dos gafanhotos e ses respectivos quantitativos.

    {
        select profissao, count(profissao) from gafanhotos
        group by profissao
        order by profissao;
    }

2 - Quantos gafanhotos homens e quantas mulheres nasceram após 01-01-2005?

    {
        select sexo, count(*) from gafanhotos
        where nascimento > '2005-01-01'
        group by sexo;
    }

3 - Uma Lista com os gafanhotos que nasceram fora do Brasil, mostrando o pais de origem e o total de pessoas
 nascidas lá. Só nos interessam os paises que tiverem de 3 gafanhotos com essa nacionalidade.
    
    {
        select nacionalidade, count(*) from gafanhotos
        where nacionalidade != 'Brasil'
        group by nacionalidade
        having count(*) > 2;
    }

4 - Uma Lista agrupada pela altura dos gafanhotos, mostrando quantas pessoas pesam mais de 100kg
 e que estao acima da media de altura de todos os cadastros.

    {
        select altura, count(*) from gafanhotos
        where peso > '100'
        group by altura
        having altura > (select avg(altura) from gafanhotos);
    }


------------------------------------------------------------------------------------------

Aula 14 - Modelo Relacional

Como é a estrutura:

Entidade -> Atributos -> Registros

entidade diferentes podem se relacionar a isso chamamos de:

DER - Diagrama Entidade - Relacionamento

Cardinalidade: é a quantidade de relacionamentos que um registo ou atributo podem fazer (n) para (n)

Cardinalidade um para um: uma um atributo só pode manter até um unico relacionamento com atributo de outra entidade
que tambem soh tem até uma relação.

Cardinalidade um pra muitos: quando um atributos pode se relacionar a muitos atributos, mas o outro pode
relanionar-se somente com até um atributo.

Cardinalidade muitos pra muitos: quando os dois atributos pode relacionar-se com muitos atributos de outra entidade.

chave primaria: o que define uma singularidade para um atributo.

chave estrangeira: chave primaria que saiu de um lugar e foi para outro lugar.

qaundo uma chave pimaria se torna um chave estrangeira, significa que elas estao relacionadas, e o tipo de Cardinalidade
é excensial para saber quantas chaves estrangeiras um regitro pode possuir.

no caso de Cardinalidade muitos pra muitos a ligação entre elas se torna uma entidade muitos e os lados se tornam 
um. Ou seja a entidade relação poder ter muita chaves estrangeiras.


------------------------------------------------------------------------------------------

Aula 15 - Chaves estrangeiras e JOin

Engine - InnoDB - compativel com chaves estrangeiras

ACID

A - ATOMICIDADE (nao pode ser dividida em subtarefas, ou tudo acontece ou nada é considerado);
C - CONSISTENCIA (Tudo tem que ocorrer bem, se estava tudo ok tem que terminar com tudo ok)
I - ISOLAMENTO (Tarefas simultanes não podem interferir uma na outra)
D - DURABILIDADE (Tem que durar o tempo que for necessario)

para definir uma tabela como chave estrangeira:

    OBS: é preciso fazer a relação entre a chave estrangeira(MUL) e a chave primaria(PRI) da tabela:
    {
        use cadastro;

        describe gafanhotos;

        alter table gafanhotos
        add column cursopreferido int;

        alter table gafanhotos
        add foreign key(cursopreferido)
        references cursos(idcurso);
    }

para atualizar a chave estrageira de um registro:

    {
        update gafanhotos
        set cursopreferido = '6'
        where id = '1';
    }

para atualizar a chave estrageira de muitos registros:
    {
        select * from gafanhotos;

        //usando o a ferramenta WorkBanck selcione com o mouse os campos e preencha 
        //no canto inferiror direito click 'Aply' e depos click 'Finish'
    }

    OBS: note que um registro que possui relação não podera ser apagado de maneira normal

    {
        delete from cursos
        where idcurso = '12';
    }

JOIN  é usada para combinar linhas de duas ou mais tabelas, 
com base em uma coluna relacionada entre eles:

    {
        select gafanhotos.nome, cursos.nome, cursos.ano from gafanhotos join cursos
        on cursos.idcurso = gafanhotos.cursopreferido
        order by gafanhotos.nome;
    }

para facilitar pode-se definir abraviações:

    {
        select g.nome, c.nome, c.ano from gafanhotos as g inner join cursos as c
        on c.idcurso = g.cursopreferido
        order by g.nome;
    }